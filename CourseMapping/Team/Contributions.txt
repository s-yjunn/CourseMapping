Allison:
    Data: 
    1. courses.json
    2. majors.json
    3. Structure of pathway JSON: pathway.json is an example pathway with the semester properties shown

    Saving:
    1. Structure of file system for users (user and pathway id's)
    2. save.js
    3. saved.html.php
    4. save.php
    5. openSaved.js, 
    6. script.js, all except the part that asks the user whether they want to save
    7. logout.js, which saves the user’s open tabs if they click yes. Again, querying the user was Hyana’s

    General Functionality:
    1. Additions to pathway.js,
        These additions include interactions with session storage and currentPathway to store user's edits to the pathway.
        I also added a method to remove a courseBlock from the HTML and storage.
    2. pathwayFront.js with Yujun  
        I added the part that deals with adding prereqs
    
    Pop-ups:
    1. Added message bar to index.html.php
    2. messageBar.css
    3. messageBar.js, a function to display message with messageBar
    4. removePopUp.html, a pop-up that asks the user if they want to remove course blocks that used to be the prereqs for 
        a course that they changed the prereqs for.
    5. popUp.css, styling for the pop-up described above.
   
    Site
    1. Created the buttons that allow the user to open saved pathways
    2. Added the ability to change the pathway title: 
        a. Added the pathwayTitle and titleChanger to tab.html.php
        b. pathwayMeta.php

Hyana:
    Data: 
    1. Users.json

    Design:
    1. Website design (tab, admin page) in general based on our mid-term 
    2. ask if user will save the tab or not before logout/remove the tab using jquery-ui
    3. View.css, add.css, tab.css(not related to tab.html)

    Admin/server side:
    1. addCourse.php: can add a course to courses.json and majors.json
    2. rmCourse.php: Can remove course(s) from courses.json
    3. userinfo.php: indicates which user is logged in(guest, admin, user)
    4. viewCourses.js/viewMajors.js: admin can look at the data from courses.json and majors.json easily.

    Register/login:
    1. Register.php/login.php: Implemented register & login feature
    2. logouttabs.php/logintabs.php: Different tabs will be shown depends on the login status(admin, user, guest)
    3. loginStyle.css: Implemented pop-up modal to register and login features


Yujun:
    Pathway
    1. Tab.html.php
    2. Pathway.js: Create elements based on user selected data. Make draggable elements. Link courses according to data. 
                   Help implement auto-saving the current pathway to sessionStorage every time the user change something by dragging courses.
    3. pathwayFront.js: Create dropdown menu for courses that have multiple ways to satisfy prerequisites.
    4. jsonParser.js: Read data from json files.
    5. pathwayPage.css: Css of tab page
    6. courseBlockDropDown.css: Css of dropdown menu

    Restore from saving
    1. restorePathway.js: When the user refresh the page, read from sessionStorage and restore and recreate pathways for existing tabs.
                          If the user change major for the tab by selecting and getting courses for a different major, clear existing pathway on page as well as in sessionStorage.

    Help Debugging in general
    
Olivia:
    1. Worked on register and login ability
    2. Edited register and login tabs to be separate
    3. Updated CSS of index page, pathway page, fixed resizing bug
    4. Worked on pop-up modal for login and register tabs

